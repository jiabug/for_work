package Mathematics_and_Probability;
/*
 * Given two squares on a two-dimensional plane, find a line that would cut these two squares in half.
 * Assume that the top and bottom sides of the square run parallel to the x-axis.
 */
public class e5 {
	
	private double top;
	private double bottom;
	private double left;
	private double right;
	private double size;
	public Point middle(){
		return new Point((this.top + this.bottom) / 2.0, (this.left + this.right) / 2.0);
	}
	
	public Point extend(Point mid1, Point mid2, double size){
		
		int xdir = mid1.x < mid2.x ? -1 : 1;
		int ydir = mid1.y < mid2.y ? -1 : 1;
		
		if (mid1.x == mid2.x){
			return new Point(mid1.x, mid1.y + ydir * size / 2.0);
		}
		
		double x;
		double y;
		
		double slope = (mid1.y - mid2.y) / (mid1.x - mid2.x);
		
		if (Math.abs(slope) == 1){
			x = mid1.x + xdir * size / 2.0;
			y = mid1.y + ydir * size / 2.0;
		} else if (Math.abs(slope) > 1){
			y = mid1.y + ydir * size / 2.0;
			x = (y - mid1.y) / slope + mid1.x;
		} else {
			x = mid1.x + xdir * size / 2.0;
			y = (x - mid1.x) / slope + mid1.y;
		}
		
		return new Point(x, y);
	}
	
	public Line cut(){
		
	}


}
