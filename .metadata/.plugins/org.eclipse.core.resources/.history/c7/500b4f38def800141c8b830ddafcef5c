package Bit_manipulation;
/*
 * A monochrome screen is stored a a single as a single array of bytes, allowing eight consecutive
 * pixels to be stored in one byte. The screen has width w, where w is divisible by 8(That is, no byte
 * will be split across rows). The height of the screen, of course, can be derived from the length of 
 * the array and the width. Implement a function 
 * drawHorizontalLine(byte[] screen, int width, int x1, int x2, int y) which draws a horizontal line 
 * from (x1, y) to (x2, y).
 */
public class e8 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
	}
	
	public void drawHorizontalLine(byte[] screen, int width, int x1, int x2, int y){
		int start_offset = x1 % 8;
		int first_full_byte = x1 / 8;
		if (start_offset != 0){
			first_full_byte++;
		}
		int end_offset = x2 % 8;
		int last_full_byte = x2 / 8;
		if (end_offset != 7){
			last_full_byte--;
		}
		
		for (int b = first_full_byte; b <= last_full_byte; b ++){
			screen[(width/8) * y + b] = (byte) 0xFF;
		}
		
		int mask_start = 0xFF >> (start_offset);
		
		
	}
	
}
